<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgFood.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAoHCBIVFRISEhUSEREREhERERIRERERERERGBUZGRgUGRgc
        IS4lHB4rHxgYJjgmKy8xNTU1GiQ7QDszPy40NTH/2wBDAQwMDBAPEB4SEhk0ISEkNDQxNDExNDQ0NDQ0
        NDQ0NDQ2NDQ3MTQxNDQ0NDQxMTQ0NTY0NDQ0NDQ0NDExNDQ0NDT/wAARCAETALcDASIAAhEBAxEB/8QA
        GwAAAQUBAQAAAAAAAAAAAAAABAABAgMFBgf/xABCEAACAQMCBAIHAwkGBwEAAAABAgADBBEhMQUSQVFh
        cQYTIjKBkaFCUrEHFCMzYnKSwdFzgqKy4fA0Q1Njg8LSJP/EABkBAQEBAQEBAAAAAAAAAAAAAAABAgME
        Bf/EACURAQEAAgICAQMFAQAAAAAAAAABAhEhMQMEEhNhcRQyQZGxIv/aAAwDAQACEQMRAD8A41VAkaly
        BAqlwTKpXSRc9cmQBkRJCRpKMsUiIqVp2jzYo1pg2xmijGTTNrUNzBqlxB+YyPKTNSM7WF4xMYJFKLaW
        kPp1wJl5l9KErWS4wJU7k7ytElypIirEUvanKWWBWxlLGWsJU0CpjKnMuaVMsCho8kyxQObkhGEkJHc4
        kgIwk0UnaAxEkiQpLbSXLbxtKhbUpo06UjbU5opTmnOqEoSXqsQnEi0qBHWDO0IrQcJmZ2Hpw6hTldvQ
        mpb0IQ9ClC1pSynTxLCIAjpBnSH1IHVgB1BBnhNSDPAgYxEciSVZRQyR5bUEUg5ESQkVGYbb23UzNund
        XRoEzRoW4EnTTEt5wJzyyWRbTpaR2piVpcZ0EsEY0yiduNYaGmdTbWGoZ3camWkGMaWImZEQWhzS2nZi
        GW9KEKkIGp22IYiYkwI3NAsEZjIc8izwGqNA6hl7tB3EAdxKWWFFI3qoAqpJhIT6uRZYAdZYpZUWKFc5
        b2uIUABCSoAmNxC8wcLOFu3fWhNe7VfOB+vZz4QFck5MOt0mdNRq2Kw7lgliJqIk1j2mXQEL7UMpCI0d
        ZfTTE6vPTCnL0WIySGaQRRMJ0giSwtAmzxASsS5RM2iDLIkQgLGZIlA/LG5IRySS05oDClJerha04mSA
        CyQeoJoVFmfcmAI5ilLPFG10x3qlpkXyagzWRdIDfpPPXogSks0KCwOkIfQkrUaVnvNakJk2u816EY3l
        Mpwdlklk3EiBO8eakYwMliNyyomjy0PKVEmsbFqtCUMGVZagks2ChERILmWjA3iTQSpE7qsHub0LMK84
        iTnE0Nxr9Qd5IXintOMqVmznJkReOOsDsalZTMy7eYi8UYbyL8SzJVi6tUigD3IMUxuu8k0nS2EHvl0l
        tudI1yuhnO1qRnUodRgVOG0ZmtRoWx1E2beYttvNm3MY9mXQlhGAkmkQZ3nTyXs4ElyxCSEqEqSapEol
        qiAlWWqsraoBvArniAHWUH1LhVmZdcS7GAVLln22ipURnLayimtVdu8BrVcbzefkC9JynFqwyQJfjwm+
        VpuVkDWEwHrHO8QrtIrbZxKmmWLoyYu4UaSYoJ+cxQbbdrtLqy6Su0hDjSeavVGQo1hdKDOPaMIpSVqN
        C36Tbs0zMKgdp0vDFziMe2cuha2+RINazaoUNJM2s9EeWsH83Mf1Rmy9ADUzG4hxFEyARKhmYLvA7niA
        XaZFzxIttKKdN31O3jKCq18zHAjJRJ1aWJTRBr84NXvc6IPjAJaoqwS5vDjTSRSkTqZCqgEsSo2rs2QS
        YFxS2G8vNYLtM67uWaatmkkrKqprIGFMuZW6TGmg5jGWMkrIhUTHjGPA6uzMNYaQC0Os0Ok81eqMquPa
        MlTMV0PajU5mtQfQM6jg52nKUTNyy4giDUy49pl07q2IxrB77idNAckTnLXiNe4Y07dS2Pfc+zTQd2aa
        lLgNJfbuH9e++GPLTB8F3PxnW5TGbteeY3K/8xiXvGalYlaCPU6ZVSR84Gvo5eP7ThUz99wPoJ1tXiKI
        OWmoAGgCgKPpAXvajbaTll7WM65ejH1Le7pnW/osF1qVaefAFpdV4RTA0rrn9xoQtrXfZXPwMsfhFcKW
        ZWAGpJEx+rv8Rv8AS4zusGpwTJ/4imc9DlZYnAKijmHJUH/bdWmgtkSVXcsQF00JMOvPRW4TkHKGZ/8A
        pk8y+cuPs5Xn47TL1sJdfLTkb6oaejqyHsQRMWvdlvCd96mvT5lcBwNGSunrBjt3+sy7rhFnVzobGp94
        HntmPiN0/CdcPZxy4vFcc/Wyx5nMcdkmMac1eJ8GrWzAVF9ltUqIeanUHdWGhgWJ6HnCNTlD04c5EoeU
        Z7iVEQ1qcqNGQCFYoQ1OKNDdtTqJoiZdsdRNFXE8teqAr0aiVIZbcuDtKRNY4W9s5eSTpd62afo9wh7u
        ryAlKaDnq1NwiZxp3YnQCZNOkzbD4z1P0XsRb2lPTL1Qbhz3yStNfIKCf701nrDH5MY78mUxFuaVsi0q
        SBEX3V3JP3mPVpj1HqVDrkAnTufITQ/Ni/PVqaquwzozGXWNH7ZxzHOPBR+E+Zl5Msruvp4444TUD2fB
        s4L5HgNWm9a8OppsqLgEnmILnHnLbVNifpuT2H1+R+L8T1pNyY0B90kjx3H4TeOEmPyrhl5MrloqDO+e
        TRM8quw1JG4UDeZ/FzUXlRm56bMuuMYHN7Q8pp8KuFagvLgcqGm37D+PYHvDbymKiBeVRqNH0Ckd52+n
        Ljxee3L6msuZwBu+Go4pkKFZHDc2eQYB28pbfXbqpJrIhwccqD/Mxx8pB+Hc3v3L/u0uVfgAMmVJYUkJ
        bmLFcZeqQ5QD3ixOgyOm8t3Oprf3Zll7u9fZzFKgazElmdmyxbTQdzmUX/DWT3hvsepmhSQ1bh3oKAnN
        kYwoCjqe2Z0LUQylHHTHlPL8dvZ9TVn+OAo1DTBpugr2tQ/pKDHT95D9hx4TmPSXhX5uUqUmNS1r5NCo
        Rggj3qTjoyzu7+0ClgehKnxx1gtpZrWWtYVNEugzUmO1O7Rco/hkDB77dZ6PW81l+N6cvZ8MuPzx7eXl
        sxYJklotkqwKlSVYHcMDgj5wynRxPovnbCpSjOkOZIPVwJWQFRIoqzxSbaEpVxtJmqxgywhKfVjgTGOD
        WWVqaAnbUw6hZDHM5wO0zm4kqaUxk9+kHe9d9z8Ok6SSMXbWuOIKvs0x8ek9V4ZWD21m3R7Ogf7ygqw+
        c8WQZnoP5PuKCtSeyJ//AEWr1KtsDvUoucvTHiDr/D4zj7GNywsjr6+UxzlrtaqD1Hs/ZqBmA7Su2UaA
        9U5P7w6Z8Rr8ZmHiDocrqCMEEEhh1BEvtL9H0Gg6oxwR+63Udus+RK+pcbNt+j0XwAPkSOb6BR8YcF5/
        Z0xyhmzk+9soHQYmVbXPKQc86jZ/5MOhm1bVEbVSNQARnoNvxns8NmXFeHyyzlgVOHtRq+sRitPUuBqG
        H3cbHMAr+k55uX1HMBoqiodB8BO0q0UYYYAg7joZWlvSQeyiL5KBN3wWdZaiTzY392O65WnxO4f9XbsB
        +29Tk+I9kES8cJr1gDXqBUGopUgAunTTSbleuvcdhynXy0gvrvgO05WSXVu25le5jpfbUKdNSiKqgZGg
        1IxjU9esouaoyT0118ZU90WHs+1jdtlHx2mddXqL1DvsAD7C/GYzz3NTpvDx23d7A8UbfPvMc47Qayok
        vRYZ5hc2xGP7Vc/TMqqsztjctqTNSx5KKvdVP1NmrP0/SXDLyqgPf2sebL4yeDC5Z8O/mymPj5eccfpq
        t3dhcY/O7nGP7VoEBE9VnZqjEFqjM7kbF2JZj8yYPXuANBPrvkHrVQJnVHJkmYmVkwqphGlwpExSaDPc
        om3tNAqtyz7nTsNoOJJRG00sEIt0LHSNQtidToIcjAaKPCWQomjTCY6sdhM6pXq0Lg1UJp1abK6MN1JA
        +mCR8Z1vCeFhAKlTVzsD0mF6YUOWqr40qU/8SnX6ETWU42zLzp6FwHj9DiK4JShfgZekx5adc/fQ9D4f
        PvI3lo6MVZWUjowwZ44rkEMpKsDkEEgg9wRtO34J+UauiileIt7RGgL4FZB4P1+nnPF5fXxzu5xXt8Ps
        5YTV5jrLfidWmfeJ8/wmhR9JAPeTB+9TblOfLaA2fEuF3ePU3HqKh/5VyMa9g3X6w6p6LVSOamEqDoad
        RTn4HE8mXr+TH+N/h655vDn3dfkfT9J6f3nHmAfrkSTekdM7ux/uf6zn6/Aqy7pUGP2GI+Ygr2FQfZqf
        wP8A0mLM53K1MPHetOkb0hpdOcn90AfUmC1/SToqZ8WPN9NpjpwyodkqHPam/wDSaFv6N3LkYo1PNgEH
        +IiJhnepVv08e7P7UXPF6r6EnHQdMeUroF3O58fCbi+jQpDnuq9C3Qb8zgnHxwJlX/prwq0yLZXv642Y
        +zRU9DkjGP3QZ2w9XLL93Djl7WGPGPLc4fw3CNWrMKFBF5nruQvsDU8vN/mPwzOE9L/S9Lo+otspY2wL
        IoGDWcA/pGB1A1OBvqSdTpznpT6V3l8c13xTDApQTK0l7HH2j4n6TMtqaA1Odiqik50xksRhQM+OJ78P
        HjhNR4fJ5cs7uqre/YDlJ0hatnWZtN0GcqrHoWL6fIidR6N8Ep3KHFT1bk4UAh0UnYOCcqD3zpnYzc25
        W6ZQMup2/Uw1+GtSdkqAq6nBB3HX8CPnGeIVQ4EUZ4pUc/Tpk7Q2nSVfEyAfoNIuaGlzPNn0YsPWvzsM
        pT+pnPkz0f0VsuS1V8avlsxO0vQyooJ00xOV9MSjIFGr025s57jBT+fwE27665QQnvvkDwHVjOD4jdc7
        YByik4/aPVzNZZcaZxx5ZJij1FwfORzObofEOsuL3NH9VXq08dEqMB8toCI8I6q2/KFxRNBcl/7REb+U
        MX8qPFB9ukfOiP6ziSIpd0dw35UeKnapTX92iP6wKt6b8Uqg891VA7Jy0x/hGZzAEsRsfGN1NRdcVndu
        ao71G35ndnPzYyAEjz/CQer2jap1WGMdZXgsST13MVNST/OFBD0BPkIoEZJZa1nRg9NmRhsyHHwPceEs
        9U2dQR5jEpqHlPj4EGQdNb8Ve6dmcKKhprnlBALIAM/ERnMwOFXRpuKn7Qz4pkFvpNvjD8jui98g+B1E
        sShbm4C6DeKANrFCq8xEyBeQLQLOfPyM9n4fUprw+mxIUrTBxn2sgdp4mDOy9H+P019Wl0hekqerLpkM
        u/Kxx7w1wZi2rIp4rdkJUqMcVKn6Omv3V6nTw+pnMw3jXEPXVCyryU1yKaZyQudz4mZ/rJQ74xBiJN3z
        K8wHizGzHzKHzHzIxxAlzxcxjqvjJryjrmVEFUmWU6JYgd9fhE1XOgGO8ZX1yDrvmQW1adTOOXl0xgkZ
        xK/VN/szVLesQN9pdDAmgCtTPUxU6Oc/yljwiwT2sHrg/CRUjZlVJONB07zR42PapMd3t6LH4pBryrnm
        prqTgDxY7CFceP6UoNqSU6X8CgH65liVksYo4BY4EeUAiPGkwsgrmlYsC3LnAcadge3wORM9oyORjzyP
        Awo+/smQFux1Hbx8pnEzcS7V05ameYaHvjow7zIuKBQ91PusNjCKZGSixCoxSWIsQGEcARYj4gIcvifk
        I5PYARgI+IQ0kBGjwLqNdk2PmOhjtWB8D9JTImAQg5iBDLlOQBtjsPE9pTboEXnffTAjIHrOAAWYnlRB
        t5eXUmBqejFupqeuqfq7dTcVM7Mw/Vp5s2PhBHdqjsx3YlifEw68ARFtaZ5grc9xUGz1sYwPBRkDzPhK
        FAAwJZE2iqgaCKJjFKrJUR4opBBhKnMuc9pQ41kE0qnToe8NSsrAhtM79j8JmSauYVfVo41Uhh4bj4So
        SQbPWMVMIiY8UUBRRR4CEfEQizAUUWYhAbMmiEkYGT0ltrRZ25URnboqgsfkJurwoUwGunWgCP1SEPXY
        dtPdHl85ZLTcjOtbV3bkQesq9T9imO5O3+/hNBatOgGp0WD1WGKlwPsjqlP+bfLuBrvifsmlST1NH7i+
        +/i7dR4fjMosc7y8RO2qgAGmgjkwShdHGG18esJVgdtfKFIiKQr1QviegigZxlbPGJixMhSLiSxJAQKM
        RcsvCCMVjQpkkciOUjFYVPnB3kkQNoCB5kD6mDmKASKROgK/xAfWTFo/TlP/AJKf9YJkx+Ywg6nw6qxw
        qgnsHp//AFLm4NUUZdqaD9p1/wDXMzVY9yPKPrLwctWjw63/AOZcoo7U6dSofwAl4qcPp+7TrXLDrVcU
        k/hXXHnMVRJhY2mmtU4/W92kEtk2CUVC/NtyfjMypUO5JZyc5JyT4mM5xp1/CQCxu1dEM7mSzEe3T8ZJ
        BAcDSTpKc6ZHeSppzd/GFqgG0aAtai2Sfe/ERQuKVNsWOI0sVJlSCyYEUUoREbEfETEDz7QINgbykt/v
        tJuM6yOIEcRYksRKmTpAiFliU5ctLHnLQkaNh+WTWnCVp946pGk2pWnI1mC6DVup6D/WTr1seyvxI6eA
        gwiqYSUSiWBIEVEIpJny6mNSp8x8OphqoAMDaNBlUAYEeIxpQoo2Y0DMTaSiikgePFFAR2MqEUUUSlbR
        RQGhFEaCKKIlXiSWKKaRMyN0cKcabCKKSrAS/wAo6DSPFCpSXT5RRSA2iNB5ScUU0yiZExRSCi56RRRQ
        0//Z
</value>
  </data>
</root>